---
title: "Building intuition into popgen concepts and simulation-based inference"
subtitle: "[Workshop on population and speciation genomics](http://evomics.org/workshops/workshop-on-population-and-speciation-genomics/2025-workshop-on-population-and-speciation-genomics-cesky-krumlov/)"
author:
  - "Martin Petr"
  - "[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)"
date: "January 2025"
date-format: "MMMM YYYY"
---

# Reference materials

Unless you're already a *slendr* expert, you will probably need some reference materials to do the exercises. Here are the options:

1.  You can refer to the slides with the *slendr* crash course. The exercises will follow the progression of our walkthrough of the *slendr* functionality in the first part of this activity. You can find the material rendered as \[normal slides\]() or \[continuous handouts\]() (the latter being probably a bit more practical for reference.
2.  Tutorials on the [*slendr* website](https://www.slendr.net).
3.  [Manual pages](https://www.slendr.net/reference/index.html) of all available *slendr* functions. Note that you can get the help page of every *slendr* R `function` by typing `?function` in the R console. For instance, typing `?ts_tajima` gives you the help page of the *tskit*/*slendr* function implementing the tree-based computation of Tajima's D.

# Installation setup

The easiest way to set up everything on your computer is to do the following:

1.  Clone the repository with the activity materials (source code with slides and exercises materials, example scripts, and solutions). In a shell terminal, in your home directory (or anywhere else, really) you can run:

    ```         
    $ git clone https://github.com/bodkan/cesky-krumlov-2025 ~/slendr_activity
    ```

2.  Install all the R package dependencies by going into the activity repository directory you just cloned and installing the necessary R packages. We're using the *renv* package to manage all the dependencies, so you don't have to track every package individually.

-   First go into the project directory:

    ```         
    $ cd ~/slendr_activity
    ```

-   Open the R terminal in that directory. You should get a note that the renv package is being automatically setup, like this:

    ```         
    $ R

    [... R startup information stuff ...]

    # Bootstrapping renv 1.0.11 --------------------------------------------------
    - Downloading renv ... OK
    - Installing renv  ... OK

    - Project '~/slendr_activity' loaded. [renv 1.0.11]
    - One or more packages recorded in the lockfile are not installed.
    - Use `renv::status()` for more details.
    ```

-   Install the R package dependencies (still in the R console!):

    ```         
    > renv::restore(prompt = FALSE)
    ```

-   Set up the Python environment used by the *slendr* R package for simulation and tree-sequence analysis (still in the R console!):

    ```         
    > slendr::setup_env(agree = TRUE)
    ```

    If everything worked, you should get an optimistic message saying:

    ```         
    ======================================================================
    Python environment for slendr has been successfuly created, and the R
    interface to msprime, tskit, and pyslim modules has been activated.

    In future sessions, activate this environment by calling init_env().
    =======================================================================
    ```

4.  Open RStudio and navigate to your project directory via `File -> Open Project...`.

**If the `setup_env()` installation procedure fails, try the following:**

1.  Delete the failed installation attempt:

```         
slendr::clear_env(force = TRUE, all = TRUE)
```

2.  Try installing it again, this time using `pip` as a Python installation method (the default is `conda` which unfortunately fails fairly often):

```         
slendr::setup_env(agree = TRUE, pip = TRUE)
```

In every previous installments of this workshop, this is all that was needed to resolve problems.

**Installing SLiM**

It's unclear whether we will manage to go through the entirety of the final exercise. However, to be able to do this, having SLiM at least version 4.2 (and it being available in your unix `$PATH!`) is required. If this isn't possible for your, don't worry. You'll be able to do most of that exercise even without SLiM, and I will demonstrate the whole exercise (including the SLiM bit) for you.
